
version: '3.8'

services:
  # 2. postgre 설치
  kong-database:
    image: postgres:9.6
    container_name: kong-database
    networks:
      - prologue-net
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    ports:
      - "5432:5432"
    # DB가 완전히 준비되었는지 확인하는 헬스체크 추가
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong"]
      interval: 5s
      timeout: 5s
      retries: 5

  # 3. db 초기화 (마이그레이션)
  kong-migrations:
    image: kong:latest
    command: "kong migrations bootstrap"
    networks:
      - prologue-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    # kong-database 서비스가 healthy 상태가 된 후에 실행되도록 설정
    depends_on:
      kong-database:
        condition: service_healthy
    restart: on-failure # 실패 시 재시도

  # 4. kong 실행하기
  kong:
    image: kong:latest
    container_name: kong
    networks:
      - prologue-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - "8000:8000"
      - "8443:8443"
      - "127.0.0.1:8001:8001"
      - "127.0.0.1:8444:8444"
    # kong-migrations 작업이 성공적으로 완료된 후에 실행되도록 설정
    depends_on:
      kong-migrations:
        condition: service_completed_successfully

# 1. Docker network 설정
networks:
  prologue-net:
    driver: bridge